{"version":3,"sources":["api/users.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["id","name","username","email","UserInfo","user","className","href","TodoInfo","todo","classes","completed","title","TodoList","todos","map","getUser","userId","usersFromServer","find","App","useState","setUser","setTitle","todoList","setTodoList","isUserError","setIsUserError","isTitleError","setIsTitleError","action","method","onSubmit","event","preventDefault","todosId","newTodo","Math","max","type","placeholder","value","onChange","target","required","defaultValue","disabled","u","ReactDOM","render","document","getElementById"],"mappings":"6MAAe,G,MAAA,CACb,CACEA,GAAI,EACJC,KAAM,gBACNC,SAAU,OACVC,MAAO,qBAET,CACEH,GAAI,EACJC,KAAM,eACNC,SAAU,YACVC,MAAO,qBAET,CACEH,GAAI,EACJC,KAAM,mBACNC,SAAU,WACVC,MAAO,sBAET,CACEH,GAAI,EACJC,KAAM,mBACNC,SAAU,WACVC,MAAO,6BAET,CACEH,GAAI,EACJC,KAAM,mBACNC,SAAU,SACVC,MAAO,4BAET,CACEH,GAAI,EACJC,KAAM,uBACNC,SAAU,mBACVC,MAAO,2BAET,CACEH,GAAI,EACJC,KAAM,kBACNC,SAAU,eACVC,MAAO,0BAET,CACEH,GAAI,EACJC,KAAM,2BACNC,SAAU,gBACVC,MAAO,wBAET,CACEH,GAAI,EACJC,KAAM,kBACNC,SAAU,WACVC,MAAO,2BAET,CACEH,GAAI,GACJC,KAAM,qBACNC,SAAU,iBACVC,MAAO,4B,OCrDEC,EAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OACtB,mBAAGC,UAAU,WAAWC,KAAI,iBAAYF,EAAKF,OAA7C,SACGE,EAAKJ,QCAGO,EAAW,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,KACnBC,EAAUD,EAAKE,UAAY,+BAAiC,WAElE,OACE,0BAASL,UAAWI,EAAS,UAASD,EAAKT,GAA3C,UACE,oBAAIM,UAAU,kBAAd,SAAiCG,EAAKG,QAErCH,EAAKJ,MAAQ,cAAC,EAAD,CAAUA,KAAMI,EAAKJ,WCR5BQ,EAA4B,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,MAC1C,OACE,yBAASR,UAAU,WAAnB,SACGQ,EAAMC,KAAI,SAAAN,GACT,OACE,cAAC,EAAD,CAEEA,KAAMA,GADDA,EAAKT,UCHtB,SAASgB,EAAQC,GAGf,OAFkBC,EAAgBC,MAAK,SAAAd,GAAI,OAAIA,EAAKL,KAAOiB,MAEvC,KAGf,IAAMH,EChBE,CACb,CACEd,GAAI,EACJY,MAAO,qBACPD,WAAW,EACXM,OAAQ,GAEV,CACEjB,GAAI,GACJY,MAAO,kBACPD,WAAW,EACXM,OAAQ,GAEV,CACEjB,GAAI,EACJY,MAAO,qCACPD,WAAW,EACXM,OAAQ,IDDiCF,KAAI,SAAAN,GAAI,kCAChDA,GADgD,IAEnDJ,KAAMW,EAAQP,EAAKQ,aAGRG,EAAM,WACjB,MAAwBC,mBAAS,KAAjC,mBAAOhB,EAAP,KAAaiB,EAAb,KACA,EAA0BD,mBAAS,IAAnC,mBAAOT,EAAP,KAAcW,EAAd,KACA,EAAgCF,mBAAiBP,GAAjD,mBAAOU,EAAP,KAAiBC,EAAjB,KACA,EAAsCJ,oBAAS,GAA/C,mBAAOK,EAAP,KAAoBC,EAApB,KACA,EAAwCN,oBAAS,GAAjD,mBAAOO,EAAP,KAAqBC,EAArB,KA0CA,OACE,sBAAKvB,UAAU,MAAf,UACE,+CAEA,uBAAMwB,OAAO,aAAaC,OAAO,OAAOC,SA5CL,SAACC,GAGtC,GAFAA,EAAMC,iBAEQ,KAAVtB,GAAyB,MAATP,EAAc,CAChC,IAAM8B,EAAUX,EAAST,KAAI,SAAAN,GAAI,OAAIA,EAAKT,MAEpCoC,EAAgB,CACpBpC,GAAIqC,KAAKC,IAAL,MAAAD,KAAI,YAAQF,IAAW,EAC3BvB,QACAD,WAAW,EACXM,QAASZ,EACTA,KAAMW,GAASX,IAGjBoB,EAAY,GAAD,mBAAKD,GAAL,CAAeY,KAE1Bb,EAAS,IACTD,EAAQ,KAGI,KAAVV,GACFiB,GAAgB,GAGJ,KAATxB,GACHsB,GAAe,IAmBf,UACE,sBAAKrB,UAAU,QAAf,UACE,2CAEE,uBACEiC,KAAK,OACL,UAAQ,aACRC,YAAY,gBACZC,MAAO7B,EACP8B,SAxBQ,SAACT,GACnBV,EAASU,EAAMU,OAAOF,OACtBZ,GAAgB,SAyBTD,GACK,sBAAMtB,UAAU,QAAhB,qCAIR,sBAAKA,UAAU,QAAf,UACE,0CAEE,yBACE,UAAQ,aACRsC,UAAQ,EACRH,MAAOpC,EACPwC,aAAa,IACbH,SAnCO,SAACT,GAElBX,EAAQW,EAAMU,OAAOF,OACrBd,GAAe,IA2BP,UAOE,wBAAQc,MAAM,IAAIK,UAAQ,EAA1B,2BACC5B,EAAgBH,KAAI,SAAAgC,GACnB,OACE,wBAAQN,MAAOM,EAAE/C,GAAjB,SACG+C,EAAE9C,gBAMZyB,GAAgB,sBAAMpB,UAAU,QAAhB,qCAGnB,wBAAQiC,KAAK,SAAS,UAAQ,eAA9B,oBAIF,cAAC,EAAD,CAAUzB,MAAOU,QEjHvBwB,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.c86befbd.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import { User } from '../../types/User';\n\ntype Props = {\n  user: User;\n};\n\nexport const UserInfo = ({ user }: Props) => (\n  <a className=\"UserInfo\" href={`mailto:${user.email}`}>\n    {user.name}\n  </a>\n);\n","import { UserInfo } from '../UserInfo';\nimport { Todo } from '../../types/Todo';\n\n// Add the required types and props\ntype Props = {\n  todo: Todo;\n};\n\nexport const TodoInfo = ({ todo }: Props) => {\n  const classes = todo.completed ? 'TodoInfo TodoInfo--completed' : 'TodoInfo';\n\n  return (\n    <article className={classes} data-id={todo.id}>\n      <h2 className=\"TodoInfo__title\">{todo.title}</h2>\n\n      {todo.user && <UserInfo user={todo.user} />}\n    </article>\n  );\n};\n","import { TodoInfo } from '../TodoInfo';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[];\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }: Props) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map(todo => {\n        return (\n          <TodoInfo\n            key={todo.id}\n            todo={todo}\n          />\n        );\n      })}\n    </section>\n  );\n};\n","import React, { FormEventHandler, useState } from 'react';\nimport './App.scss';\n\nimport todosFromServer from './api/todos';\nimport usersFromServer from './api/users';\n\nimport { User } from './types/User';\nimport { Todo } from './types/Todo';\nimport { TodoList } from './components/TodoList';\n\nfunction getUser(userId: number): User | null {\n  const foundUser = usersFromServer.find(user => user.id === userId);\n\n  return foundUser || null;\n}\n\nexport const todos: Todo[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUser(todo.userId),\n}));\n\nexport const App = () => {\n  const [user, setUser] = useState('0');\n  const [title, setTitle] = useState('');\n  const [todoList, setTodoList] = useState<Todo[]>(todos);\n  const [isUserError, setIsUserError] = useState(false);\n  const [isTitleError, setIsTitleError] = useState(false);\n\n  const handleSubmit: FormEventHandler = (event) => {\n    event.preventDefault();\n\n    if (title !== '' && user !== '0') {\n      const todosId = todoList.map(todo => todo.id);\n\n      const newTodo: Todo = {\n        id: Math.max(...todosId) + 1,\n        title,\n        completed: false,\n        userId: +user,\n        user: getUser(+user),\n      };\n\n      setTodoList([...todoList, newTodo]);\n\n      setTitle('');\n      setUser('0');\n    }\n\n    if (title === '') {\n      setIsTitleError(true);\n    }\n\n    if (+user === 0) {\n      setIsUserError(true);\n    }\n  };\n\n  const handleTitle = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setTitle(event.target.value);\n    setIsTitleError(false);\n  };\n\n  const handleUser = (event:\n  { target: { value: React.SetStateAction<string>; }; }) => {\n    setUser(event.target.value);\n    setIsUserError(false);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form action=\"/api/todos\" method=\"POST\" onSubmit={handleSubmit}>\n        <div className=\"field\">\n          <label>\n            Title:\n            <input\n              type=\"text\"\n              data-cy=\"titleInput\"\n              placeholder=\"Enter a title\"\n              value={title}\n              onChange={handleTitle}\n            />\n          </label>\n          {isTitleError\n            && (<span className=\"error\">Please enter a title</span>)}\n\n        </div>\n\n        <div className=\"field\">\n          <label>\n            User:\n            <select\n              data-cy=\"userSelect\"\n              required\n              value={user}\n              defaultValue=\"0\"\n              onChange={handleUser}\n            >\n              <option value=\"0\" disabled>Choose a user</option>\n              {usersFromServer.map(u => {\n                return (\n                  <option value={u.id}>\n                    {u.name}\n                  </option>\n                );\n              })}\n            </select>\n          </label>\n          {isUserError && (<span className=\"error\">Please choose a user</span>)}\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n      <TodoList todos={todoList} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}